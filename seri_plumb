#!/bin/bash

cathica_call () {
    local func="$1"

    if [[ -n "$2" ]]; then
	local arg="string:\"$2\""
    fi

    dbus-send --dest="org.irq0.cathica" \
	      --print-reply \
	      --session '/org/irq0/cathica/Plumb' \
	      "$func" $arg
}


case "$1" in
    default)
	cathica_call org.irq0.cathica.Plumb.clipboard_default_action
	;;
    string)
	cathica_call org.irq0.cathica.Plumb.string "$2"
	;;
    string+default)
	cathica_call org.irq0.cathica.Plumb.string_default_action "$2"
	;;
    *)
	cathica_call org.irq0.cathica.Plumb.clipboard
	;;
esac

exit 0

clipboard="$(xclip -o)"

child_comm ()
{
    local shell_pid="$1"
    local shell_child="$(cat "/proc/${shell_pid}/task/${shell_pid}/children" | tr -d '[:space:]\n')"

    if [[ -z $shell_child ]]; then
	return 1
    else
	cat "/proc/${shell_child}/comm"
    fi
}

readonly current_window="$(xprop -root \
	 | awk '/^_NET_ACTIVE_WINDOW/ { print $5 }')"
readonly window_title="$(xprop -id "${current_window}" \
	 | awk 'BEGIN { FS="=" } /^_NET_WM_NAME\(UTF8_STRING\)/ { print $2 }' | tr -d \")"
readonly window_pid="$(xprop -id "${current_window}" \
         | awk 'BEGIN { FS="=" } /^_NET_WM_PID\(CARDINAL\)/ { print $2 }' | tr -d '[:space:]')"
readonly window_class="$(xprop -id "${current_window}" \
	 | awk 'BEGIN { FS="[=,]" } /^WM_CLASS\(STRING\)/ { print $2 }' | tr -d '[:space:]\"')"

case "${window_class}" in
*rxvt*)
    shell_pid="$(cat "/proc/${window_pid}/task/${window_pid}/children" | tr -d '[:space:]\n')"

    case "$(child_comm "${shell_pid}")" in
	screen)
	    echo "Screen session detected. No CWD detection :("
	    ;;
	tmux)
	    echo "Tmux session detected. Using CWD of active window's process"

	    tmux_client_pid="${shell_pid}"
	    tmux_client_pts="$(readlink /proc/${tmux_client_pid}/fd/0)"
	    tmux_session_id="$(tmux list-clients -F '#{client_tty} #{session_id}' \
	    	  | grep "${tmux_client_pts}" | cut -f 2 -d ' ')"

	    tmux_pane_pid="$(tmux list-windows -a -F '#{session_id} #{window_active} #{pane_pid}' \
	    	  | awk -vsession_id="${tmux_session_id}" '($1 == session_id && $2 == 1) { print $3 }')"

#	    echo "${tmux_client_pid} ${tmux_client_pts} ${tmux_session_id} ${tmux_pane_pid}"
	    shell_pid="${tmux_pane_pid}"
	    ;;
    esac

    working_dir="$(readlink -f "/proc/${shell_pid}/cwd")"
    ;;

*emacs*)
    local current_window_dec="$(printf '%d' ${current_window})"
    working_dir="$(timeout 1s emacsclient \
			  --eval "
(first
(let* ((frame (-first (lambda (frame)
			(string= (frame-parameter frame 'outer-window-id) \"${current_window_dec}\"))
		     (frame-list))))
      (-non-nil (-map (lambda (buffer)
	  (unless (string= (buffer-name buffer) \"*scratch*\")
	    (with-current-buffer buffer
	      default-directory)))
	(frame-parameter frame 'buffer-list))))))" | tr -d \")"
    ;;
esac

clipboard=${clipboard/#\~/$HOME}
working_dir=${working_dir/#\~/$HOME}

resp=$(plumb -s "${window_class}" -w "${working_dir}" "${clipboard}" 2>&1)

if [[ $? != 0 ]]; then
    notify-send "Plumbing error" "\"${window_class}\"✕\"${working_dir}\"✕\"${clipboard}\"\n  ↦ \"$resp\""
fi

# #0007963
